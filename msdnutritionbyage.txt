package nutritionbyage

import org.apache.spark.SparkContext;
import org.apache.spark.sql.SQLContext;
import org.apache.spark.sql.hive.HiveContext;
import org.apache.spark.SparkConf
import org.apache.spark.sql.hive.HiveContext;
import scala.io.Source;
import org.apache.spark.sql.functions.avg

object datavaluebyage {

def main(args:Array[String]){
val conf = new SparkConf().setAppName("NutritionDataByAge") //import necessary configs to communicate with the driver program. 
val sc = new SparkContext(conf) //Initialization of SparkContext to communicate with the Spark 
val hiveCtx= new HiveContext(sc) //HiveContext to connect to hive service on Spark
val filename=args(0) //reading Command line arguments (in this case reading column list for Master Table
val getColumnList=Source.fromFile(filename).getLines().mkString
//*********Processing Starts****************
//Create a dataframe for nutrition data(Master Dataset)
val nutriDF=hiveCtx.sql(s"select ${getColumnList} from NutritionData.Nutrition_Physical_Activity")
//Use Case 1: Average of each Questionâ€™s "Data_Value" by year for all age groups 
val avgByAgeGroup=nutriDF.filter(!(nutriDF("question").contains("Question"))).groupBy(nutriDF("question"),nutriDF("yearstart"),nutriDF("age_in_months")).avg(nutriDF("data_value").toString())
avgByAgeGroup.registerTempTable("Tempavgdatavaluebyage") //Storing the dataframe into temporary table
hiveCtx.sql("insert into table NutritionData.datavalue_byage select * from Tempavgdatavaluebyage") //inserting into Main table
}
}
